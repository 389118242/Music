<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.dao.MessageDao">
	<resultMap id="BaseResultMap" type="com.music.entity.Message">
		<id column="messId" jdbcType="INTEGER" property="messId" />
		<result column="sendUserId" jdbcType="INTEGER" property="sendUserId" />
		<result column="messType" jdbcType="VARCHAR" property="messType" />
		<result column="receiveUserId" jdbcType="INTEGER" property="receiveUserId" />
		<result column="isRead" jdbcType="INTEGER" property="isRead" />
		<association property="user" javaType="User">
			<id property="userId" jdbcType="INTEGER" column="userId" />
			<result property="userName" jdbcType="VARCHAR" column="userName" />
		</association>
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.music.entity.Message">
		<result column="messContent" jdbcType="LONGVARCHAR" property="messContent" />
	</resultMap>
	<sql id="Base_Column_List">
		messId, sendUserId, messType, receiveUserId, isRead
	</sql>
	<sql id="Blob_Column_List">
		messContent
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from message
		where messId = #{messId,jdbcType=INTEGER}
	</select>
	<select id="selectMessagesByType" resultMap="ResultMapWithBLOBs"> select
		m.messId,m.isRead,m.messContent,m.sendUserId,m.receiveUserId,u.userId,u.userName
		from message m,user u where receiveUserId = #{param1} and
		messType=#{param2} and
		u.userId=m.sendUserId order by isRead,messId
		desc
	</select>
	<select id="selectCountOfNoReadByReceiveUserId" resultType="_int">
		select count(*) from message where receiveUserId = #{param} and
		isRead=0
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		message
		where messId = #{messId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.music.entity.Message">
		insert into message (messId,
		sendUserId, messType,
		receiveUserId, isRead, messContent
		)
		values
		(#{messId,jdbcType=INTEGER}, #{sendUserId,jdbcType=INTEGER},
		#{messType,jdbcType=VARCHAR},
		#{receiveUserId,jdbcType=INTEGER},
		#{isRead,jdbcType=INTEGER}, #{messContent,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.music.entity.Message">
		insert into message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="messId != null">
				messId,
			</if>
			<if test="sendUserId != null">
				sendUserId,
			</if>
			<if test="messType != null">
				messType,
			</if>
			<if test="receiveUserId != null">
				receiveUserId,
			</if>
			<if test="isRead != null">
				isRead,
			</if>
			<if test="messContent != null">
				messContent,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="messId != null">
				#{messId,jdbcType=INTEGER},
			</if>
			<if test="sendUserId != null">
				#{sendUserId,jdbcType=INTEGER},
			</if>
			<if test="messType != null">
				#{messType,jdbcType=VARCHAR},
			</if>
			<if test="receiveUserId != null">
				#{receiveUserId,jdbcType=INTEGER},
			</if>
			<if test="isRead != null">
				#{isRead,jdbcType=INTEGER},
			</if>
			<if test="messContent != null">
				#{messContent,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByMessID" parameterType="integer">
		update message set
		isRead=1
		where messId = #{param}
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.music.entity.Message">
		update message
		<set>
			<if test="sendUserId != null">
				sendUserId = #{sendUserId,jdbcType=INTEGER},
			</if>
			<if test="messType != null">
				messType = #{messType,jdbcType=VARCHAR},
			</if>
			<if test="receiveUserId != null">
				receiveUserId = #{receiveUserId,jdbcType=INTEGER},
			</if>
			<if test="isRead != null">
				isRead = #{isRead,jdbcType=INTEGER},
			</if>
			<if test="messContent != null">
				messContent = #{messContent,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where messId = #{messId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.music.entity.Message">
		update
		message
		set sendUserId = #{sendUserId,jdbcType=INTEGER},
		messType =
		#{messType,jdbcType=VARCHAR},
		receiveUserId =
		#{receiveUserId,jdbcType=INTEGER},
		isRead = #{isRead,jdbcType=INTEGER},
		messContent = #{messContent,jdbcType=LONGVARCHAR}
		where messId =
		#{messId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.music.entity.Message">
		update message
		set
		sendUserId = #{sendUserId,jdbcType=INTEGER},
		messType =
		#{messType,jdbcType=VARCHAR},
		receiveUserId =
		#{receiveUserId,jdbcType=INTEGER},
		isRead = #{isRead,jdbcType=INTEGER}
		where messId = #{messId,jdbcType=INTEGER}
	</update>
</mapper>